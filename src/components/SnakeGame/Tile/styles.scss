@import "../styles/colors.scss";

$snakeHeadRadius: 14px;
$snakeEyesSpacing: 2px;

#snake-game {
  .game-tile {
    border: 1px solid;
    border-color: $borderColor;
    box-shadow: 0 0 0px $appleColor;
    position: relative;
    display: flex;
    align-items: center;
    justify-content: space-around;
    border-color: transparent;
  }
  .tile-type-apple,
  .tile-type-hypercube {
    transition: background-color 0.25s 0.32s, box-shadow 0.32s 0.5s;
  }
  .tile-type-apple {
    position: absolute;
    background: $appleDark;
    fill: $appleColor;
    border-color: $appleColor;
    box-shadow: 0 0 12px $appleColor;
    border-radius: 6px;
  }
  .tile-type-hypercube {
    position: absolute;
    border-color: $hypercubeColor;
    background: $hypercubeDark;
    animation: hypercube 0.38s 0.5s forwards infinite,
      bolt 0.38s 0.5s forwards infinite;
  }
  .tile-type-dimensionator {
    position: absolute;
    border-color: $dimensionatorColor;
    background: $dimensionatorDark;
    animation: dimensionator 0.38s 0.5s forwards infinite;
  }
  .tile-type-buffer {
    background: #000;
  }
  .tile-type-obstacle {
    position: absolute;
    border-radius: 200px;
    background: $hazardDark;
    border-color: $hazardColor;
    fill: $hazardColor;
    animation: obstacle 1s 0.5s forwards infinite;
  }

  .tile-type-head,
  .tile-type-body {
    transition: background-color 1s;
  }

  .tile-type-head {
    position: absolute;
    background: $snakeHead;
    border-color: $snakeHead;
    border: 1px solid transparent;
    .snake-eyes .eye {
      background: $snakeColor;
    }
  }
  .tile-type-body {
    position: absolute;
    background: $snakeColor;
    border: 1px solid transparent;
    border-color: $snakeHead;
  }
  &.Easy {
    .tile-type-head {
      background: $easyHead;
      border-color: $easyHead;
      .snake-eyes .eye {
        background: $easyColor;
      }
    }
    .tile-type-body {
      background: $easyColor;
      border-color: $easyHead;
    }
  }
  &.Hard {
    .tile-type-head {
      background: $hardHead;
      border-color: $hardHead;
      .snake-eyes .eye {
        background: $hardColor;
      }
    }
    .tile-type-body {
      background: $hardColor;
      border-color: $hardHead;
    }
  }
  &.hyper-buff {
    .grid {
      animation: hyperframe 0.32s forwards infinite;
    }
    .tile-type-body,
    .tile-type-head {
      background-color: $hypercubeColor;
      border-color: $hypercubeColor;
      //   animation: hypersnake 0.42s forwards infinite;
    }
    .tile-type-head {
      background-color: #02083d;
      border-color: $hypercubeColor;
      animation: hypersnake 0.42s forwards infinite;
      z-index: 2;
      .snake-eyes .eye {
        background: $hypercubeColor;
      }
    }
    .tile-type-body {
      background-color: $hypercubeColor;
      animation: hypersnakeBody 0.4s forwards infinite;
    }
    // .tile-type-body,
    // .tile-type-head {
    //   box-shadow: 0 0 8px $hypercubeColor;
    // }
  }

  &.dimensionator-buff {
    .tile-type-body,
    .tile-type-head {
      background-color: $dimensionatorColor;
      border-color: $dimensionatorColor;
      //   animation: dimensionator 0.42s forwards infinite;
    }
    .tile-type-head {
      background-color: $dimensionatorDark;
      border-color: $dimensionatorColor;
      animation: dimensionator 0.42s forwards infinite;
      z-index: 2;
      .snake-eyes .eye {
        background: $dimensionatorColor;
      }
    }
    .tile-type-body {
      animation: none;
    }
    // .tile-type-body,
    // .tile-type-head {
    //   box-shadow: 0 0 8px $dimensionatorColor;
    // }
    &.hyper-buff {
      .tile-type-head {
        animation: hypersnake 0.42s forwards infinite;
      }
      .tile-type-body {
        border-color: $hypercubeColor;
      }
      .snake-eyes .eye {
        background: $hypercubeColor;
        border: 1px solid $hypercubeColor;
        // animation: hyperframe 0.42s forwards infinite;
      }
    }
  }
}

// body positioning
.tile-type-body {
  border-radius: $snakeHeadRadius;
  border-radius: 0;
  &.last {
    &.to-top {
      border-bottom-right-radius: $snakeHeadRadius;
      border-bottom-left-radius: $snakeHeadRadius;
    }
    &.to-right {
      border-top-left-radius: $snakeHeadRadius;
      border-bottom-left-radius: $snakeHeadRadius;
    }
    &.to-left {
      border-bottom-right-radius: $snakeHeadRadius;
      border-top-right-radius: $snakeHeadRadius;
    }
    &.to-bottom {
      border-top-left-radius: $snakeHeadRadius;
      border-top-right-radius: $snakeHeadRadius;
    }
  }

  &.from-left.to-bottom {
    border-top-right-radius: $snakeHeadRadius;
  }
  &.from-right.to-bottom {
    border-top-left-radius: $snakeHeadRadius;
  }
  &.from-left.to-top {
    border-bottom-right-radius: $snakeHeadRadius;
  }
  &.from-right.to-top {
    border-bottom-left-radius: $snakeHeadRadius;
  }
  &.from-top.to-left {
    border-bottom-right-radius: $snakeHeadRadius;
  }
  &.from-top.to-right {
    border-bottom-left-radius: $snakeHeadRadius;
  }
  &.from-bottom.to-left {
    border-top-right-radius: $snakeHeadRadius;
  }
  &.from-bottom.to-right {
    border-top-left-radius: $snakeHeadRadius;
  }

  &.to-top,
  &.from-top:not(.last) {
    border-top: 0 !important;
  }
  &.to-left,
  &.from-left:not(.last) {
    border-left: 0 !important;
  }
  &.to-right,
  &.from-right:not(.last) {
    border-right: 0 !important;
  }
  &.to-bottom,
  &.from-bottom:not(.last) {
    border-bottom: 0 !important;
  }
}

$eyesShiftDistance: 8px;

// snake eyes
.tile-type-head {
  border-radius: $snakeHeadRadius;
  display: flex;
  align-items: center;
  justify-content: center;
  .snake-eyes {
    display: flex;
    flex-direction: row;
    justify-content: center;
    transition: transform 0.12s;
    .eye {
      width: 4px;
      height: 3px;
      margin: 1px;
    }
  }
  &.top {
    .snake-eyes {
      transform: translate(0, -$eyesShiftDistance);
    }
  }
  &.left {
    .snake-eyes {
      transform: translate(-$eyesShiftDistance, 0);
    }
  }
  &.right {
    .snake-eyes {
      transform: translate($eyesShiftDistance, 0);
    }
  }
  &.bottom {
    .snake-eyes {
      transform: translate(0, $eyesShiftDistance);
    }
  }
  &.from-top {
    border-top-left-radius: 0;
    border-top-right-radius: 0;
  }
  &.from-left {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }
  &.from-right {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }
  &.from-bottom {
    border-bottom-right-radius: 0;
    border-bottom-left-radius: 0;
  }
}
